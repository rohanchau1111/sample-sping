plugins {
    id 'java'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '5.1.12'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ch.appuio.techlab'
//version = '0.1.1'
//version = '0.1.1'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

dependencies {
    compileOnly('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.liquibase:liquibase-core')
    implementation('io.micrometer:micrometer-registry-prometheus')
    implementation('com.h2database:h2')
    implementation('mysql:mysql-connector-java:8.0.33')
    implementation('org.postgresql:postgresql')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('junit:junit:4.13.2')
}

publishing {
    publications {
               mavenJava(MavenPublication) {
           artifactId= 'application_sample'          
               //   groupId='ch.appuio.techlab'
             artifact("${buildDir}/libs/test.zip") {
                classifier = ''
                 extension = 'zip'         
     }
               }
    //     bootJava(MavenPublication) {
    // // groupId='ch.appuio.techlab'
    //         def sanitizedBranchId = branchId.replaceAll('/', '_')
      
    //        version = "${version}-${sanitizedBranchId}-SNAPSHOT"

    //         // Construct the final artifactId
    //         artifactId = "${project.name}"

    //         // Define the artifacts to be published
    //         // artifact("${buildDir}/libs/test.zip") {
    //         //     classifier = 'application_sample'
    //         //     extension = 'zip'
    //         artifact bootJar
    
    //   // artifact("${buildDir}/libs/test.zip") {
    //   //  classifier = '/application_sample'
    //   //  extension = 'zip'
           
    // }

 
        }
    }



task createZip(type: Zip) {

    from file('test')
    archiveFileName.set('test.zip')
    destinationDirectory.set(file("$buildDir/libs/"))

  //  from "$buildDir/libs/"
   doLast {
   println 'Zip file created at ${destinationDirectory}/${archiveFileName}'
}
   doFirst {

   println 'archiving file ....${archiveName}'
}
}
artifactory {
    contextUrl = "$artifactoryURL"
    publish {
        repository {
            repoKey = "$artifactoryRepo"
            username = "$artifactoryUser"
            password = "$artifactoryPassword"
        }
        defaults {
            publications('bootJava','mavenJava')
            publishArtifacts = true
        }
    }
}

tasks.build {
   // dependsOn copyDependencies
    //dependsOn printDependencyPath
    dependsOn  createZip
}
